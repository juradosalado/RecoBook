# Generated by Django 4.1.2 on 2023-02-08 09:22

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                ("author_id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(verbose_name="Autor")),
            ],
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                ("genre_id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(verbose_name="Género")),
            ],
        ),
        migrations.CreateModel(
            name="Setting",
            fields=[
                ("setting_id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(verbose_name="Ambientación")),
            ],
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                ("book_id", models.IntegerField(primary_key=True, serialize=False)),
                ("title", models.TextField(verbose_name="Título")),
                (
                    "average_rating",
                    models.DecimalField(
                        decimal_places=2, max_digits=3, verbose_name="Puntuación media"
                    ),
                ),
                (
                    "num_ratings",
                    models.IntegerField(verbose_name="Número de puntuaciones"),
                ),
                ("description", models.TextField(verbose_name="Sinopsis")),
                (
                    "pages_number",
                    models.IntegerField(null=True, verbose_name="Número de páginas"),
                ),
                (
                    "publish_date",
                    models.DateField(null=True, verbose_name="Fecha de publicación"),
                ),
                ("cover", models.URLField(verbose_name="Portada")),
                ("authors", models.ManyToManyField(to="main.author")),
                ("genres", models.ManyToManyField(to="main.genre")),
                ("setting", models.ManyToManyField(to="main.setting")),
            ],
        ),
    ]
